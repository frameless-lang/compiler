name: CI

on:
  push:
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
        - os: ubuntu-latest
          EXE: strictly
          ZIP: strictly-linux-x64.zip
          PLATFORM: linux-x64
        - os: macos-latest
          EXE: strictly
          ZIP: strictly-macos-x64.zip
          PLATFORM: macos-x64
        # - os: windows-latest
        #   EXE: strictly.exe
        #   ZIP: strictly-windows-x64.zip
        #   PLATFORM: windows-x64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out source code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: haskell/actions/setup@v1

      - uses: actions/setup-node@v2

      - name: Install Dependencies
        run: yarn install

      - name: Test
        run: yarn run test

      - name: Build
        run: |
          cabal install exe:strictly --install-method=copy --overwrite-policy=always --installdir=dist 
          7z a -mx9 ${{matrix.ZIP}} dist/${{matrix.EXE}}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.PLATFORM}}
          path: ./${{matrix.ZIP}}
  release:
    name: release build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Tag
        shell: bash
        run: git tag -a release

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: gh release upload release artifacts/*/*.zip --clobber
