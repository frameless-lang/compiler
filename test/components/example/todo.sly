data Action = ChangeText(String), CreateTodo, ToggleDone(Integer);

type Todo = { value: String, isDone: Boolean};
type State = { currentText: String, todos: Todo[] };

store = {
	init : State
	init = { currentText = "", todos = [] }

	reducer : \State, Action -> State
	reducer = \state, ChangeText(text) ->
		{ currentText = text | state }
	reducer = \{ todos, currentText }, CreateTodo ->
		{ currentText = "", todos = [{ value = currentText, isDone = False }] ++ todos }
	reducer = \state@{ todos }, ToggleDone(index) ->
		let todos' = [
			{
				isDone = if index == index' then
					todo.isDone == False
				else
					isDone
			| todo }
		| let [ todo@{ isDone }, index' ] <- zip(todos, 0..);];

		{ todos = todos' | state }
}

main : \{}, {} -> View
main = \_, _ ->
	let [{todos, textValue}, todosDispatch] <- model(store);

	$link{
		href="./todo.css"
		rel="stylesheet"
	}
	$form{
		onsubmit = \_ -> todosDispatch(CreateTodo)
	}
		$input{
			type = "text"
			value = textValue
			oninput = \String(textValue) ->
				todosDispatch(ChangeText(textValue))
		}
		$button{
			type = "submit"
		}

	$ul
		if todos.length == 0 then
			"You don't have any todos left"
		else
			let [{value, isDone}, index] <- zip(todos, 0..);
			$li{
				class = "row"
				class?done = isDone
				onclick = \_ -> todosDispatch(ToggleDone(index))
			}
				"${value}"
