data State = First, Second(States, Integer), Third(Integer, Integer), Fourht(Integer);

store = {
	init = First
	reducer : \State, Integer -> State
	reducer = \First, action -> Second(Third, action)
	reducer = \Second(Third, outerValue), action -> Fourth(outerValue + action)
}

#[webcomponent]
main : \{}, {} -> Output
main = \_, _ ->
	$div
		let [stateState, stateDispatch] <- model(store);
		match stateState
			case \First ->
				$button{
					onclick = \_ -> stateDispatch(1)
				}
					"first"
			case \Second(Third, value) ->
				$button{
					onclick = \_ -> stateDispatch(2)
				}
					"second: ${value}"
			case \Fourth(value) ->
				"third: ${value}"
