data States = First | Second[States, Int] | Third[Int, Int] | Fourht[Int];

store = {
	init = First
	reducer = \First, action -> Second[Third, action]
	reducer = \Second[Third, outerValue], action -> Fourth[outerValue + action]
}

main = \_, _ ->
	$div
		let [stateState, stateDispatch] <- model(store);
		match stateState
			case \First ->
				$button{
					onclick = \_ -> stateDispatch(1)
				}
					"first"
			case \Second[Third, value] ->
				$button{
					onclick = \_ -> stateDispatch(2)
				}
					"second: ${value}"
			case \Fourth[value] ->
				"third: ${value}"
